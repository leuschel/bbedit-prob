<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
 <!--
	BBEdit codeless language module for Prolog source files.
	
	Built from the BBEedit Template
	by Michael Leuschel (http://www.stups.uni-duesseldorf.de/~leuschel/)
	Date of this version: Aug 2015
	
	Requires BBEdit 8.0 or higher. To install, copy the file to:
		~/Library/Application Support/BBEdit/Language Modules/
		(or /Users/leuschel/Dropbox/Application Support/BBEdit/Language Modules in case you sync with DropBox)
	and relaunch BBEdit.
    This module is licenced under EPL 1.0 (http://www.eclipse.org/org/documents/epl-v10.html) 
-->
<dict>
	<key>BBEditDocumentType</key>
	<string>CodelessLanguageModule</string>
	<key>BBLMColorsSyntax</key>
	<true/>
	<key>BBLMIsCaseSensitive</key>
	<true/>
	<key>BBLMKeywordList</key>
	<array>
		<string>acyclic_term</string>
		<string>append</string>
		<string>arg</string>
		<string>abolish</string>
		<string>assert</string>
		<string>asserta</string>
		<string>assertz</string>
		<string>atom</string>
		<string>atom_chars</string>
		<string>atom_codes</string>
		<string>atom_concat</string>
		<string>atom_concat</string>
		<string>atom_length</string>
		<string>atomic</string>
		<string>bagof</string>
		<string>call</string>
		<string>call_cleanup</string>
		<string>call_residue</string>
		<string>call_residue_vars</string>
		<string>catch</string>
		<string>clause</string>
		<string>close</string>
		<string>contains_var</string>
		<string>convlist</string>
		<string>copy_term</string>
		<string>cumlist</string>
		<string>cyclic_term</string>
		<string>dif</string>
		<string>elif</string>
		<string>:-elif</string>
		<string>else</string>
		<string>else.</string>
		<string>:-else</string>
		<string>:-else.</string>
		<string>endif</string>
		<string>endif.</string>
		<string>:-endif</string>
		<string>:-endif.</string>
		<string>end_of_file</string>
		<string>ensure_loaded</string>
		<string>exclude</string>
		<string>fail</string>
		<string>findall</string>
		<string>float</string>
		<string>forall</string>
		<string>format</string>
		<string>free_of_var</string>
		<string>functor</string>
		<string>ground</string>
		<string>if</string>
		<string>:-if</string>
		<string>include</string>
		<string>:-include</string>
		<string>integer</string>
		<string>is</string>
		<string>length</string>
		<string>library</string>
		<string>maplist</string>
		<string>member</string>
		<string>module</string>
		<string>:-module</string>
		<string>name</string>
		<string>nl</string>
		<string>nonmember</string>
		<string>nonvar</string>
		<string>number</string>
		<string>number_chars</string>
		<string>number_codes</string>
		<string>numbervars</string>
		<string>on_exception</string>
		<string>op</string>
		<string>once</string>
		<string>open</string>
		<string>otherwise</string>
		<string>portray_clause</string>
		<string>print</string>
		<string>print_message</string>
		<string>read</string>
		<string>read_term</string>
		<string>repeat</string>
		<string>retract</string>
		<string>retractall</string>
		<string>scanlist</string>
		<string>setof</string>
		<string>some</string>
		<string>somechk</string>
		<string>sort</string>
		<string>term_variables</string>
		<string>term_variables_bag</string>
		<string>time_out</string>
		<string>true</string>
		<string>use_module</string>
		<string>:-use_module</string>
		<string>var</string>
		<string>variant</string>
		<string>when</string>
		<string>write</string>
		<string>write_term</string>
		<string>:-</string>
		<string>--&gt;</string>
		<string>-&gt;</string>
		<string>\+</string>
		<string>\==</string>
		<string>\=</string>
		<string>==</string>
		<string>=..</string>
		<string>!</string>
		<string>=</string>
		<string>;</string>
		<string>[]</string>
		<string>=[]</string>
		<string>[]=</string>
		<string>_</string>
		<string>+</string>
		<string>-</string>
		<string>mod</string>
		<string>[A-Z_][a-zA-Z0-9_]*</string>
	</array>
	 
	 <key>BBLMPredefinedNameList</key>
	 <array>
		<string>assert_must_fail</string>
		<string>assert_must_succeed</string>
		<string>assert_post</string>
		<string>assert_pre</string>
		<string>begin_tests</string>
		<string>block</string>
		<string>chr_constraint</string>
		<string>chr_option</string>
		<string>discontiguous</string>
		<string>dynamic</string>
		<string>:-dynamic</string>
		<string>end_tests</string>
		<string>meta_predicate</string>
		<string>multifile</string>
		<string>public</string>
		<string>:-public</string>
		<string>volatile</string>

	 </array>
	<key>BBLMLanguageCode</key>
	<string>Prol</string>
	<key>BBLMLanguageDisplayName</key>
	<string>Prolog</string>
	<key>BBLMScansFunctions</key>
	<true/>
	<key>BBLMSuffixMap</key>
	<array>
		<dict>
			<key>BBLMLanguageSuffix</key>
			<string>.pro</string>
			<key>BBLMIsSourceKind</key>
			<true/>
		</dict>
		<dict>
			<key>BBLMLanguageSuffix</key>
			<string>.gx</string>
			<key>BBLMIsSourceKind</key>
			<true/>
		</dict>
		<dict>
			<key>BBLMLanguageSuffix</key>
			<string>.prob</string>
			<key>BBLMIsSourceKind</key>
			<true/>
		</dict>
		<dict>
			<key>BBLMLanguageSuffix</key>
			<string>.eventb</string>
			<key>BBLMIsSourceKind</key>
			<true/>
		</dict>
	</array>
	 <key>BBLMCommentLineDefault</key>
	 <string>%</string>
	<key>Language Features</key>
	<dict>
		<key>Close Block Comments</key>
		<string>*/</string>
		<key>Close Parameter Lists</key>
		<string>)</string>
		<key>Close Statement Blocks</key>
		<string>.</string>
		<key>Close Strings 1</key>
		<string>&quot;</string>
		<key>Close Strings 2</key>
		<string>&apos;</string>
		<key>End-of-line Ends Strings 1</key>
		<true/>
		<key>End-of-line Ends Strings 2</key>
		<true/>
		<key>Escape Char in Strings 1</key>
		<string>\</string>
		<key>Escape Char in Strings 2</key>
		<string></string>
		<key>Identifier and Keyword Characters</key>
		<string>_abcdefghijklmnopqrstuvwxyz:-=-!\&gt;;[]+</string>
		<key>Open Block Comments</key>
		<string>/*</string>
		<key>Open Line Comments</key>
		<string>%</string>
		<key>Open Parameter Lists</key>
		<string>(</string>
		<key>Open Statement Blocks</key>
		<string>:-</string>
		<key>Open Strings 1</key>
		<string>&quot;</string>
		<key>Open Strings 2</key>
		<string>&apos;</string>
		<key>Prefix for Functions</key>
		<string>block</string>
		<key>Prefix for Procedures</key>
		<string>mode</string>
		<key>Terminator for Prototypes 1</key>
		<string></string>
		<key>Terminator for Prototypes 2</key>
		<string></string>
	</dict>
</dict>
</plist>
